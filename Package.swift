// swift-tools-version:5.2
// The swift-tools-version declares the minimum version of Swift required to build this package.

import PackageDescription

let package = Package(
  name: "C_mujoco",
  platforms: [.macOS(.v10_14), .iOS(.v11), .watchOS(.v3), .tvOS(.v10)],
  products: [
    .library(name: "C_mujoco", type: .static, targets: ["C_mujoco"]),
  ],
  dependencies: [],
  targets: [
    .target(
      name: "ccd",
      path: "external/libccd/src",
      publicHeadersPath: "include"),
    .target(
      name: "qhull",
      path: "external/qhull/src/libqhull_r",
      publicHeadersPath: "."),
    .target(
      name: "lodepng",
      path: "external/lodepng",
      sources: ["lodepng.cpp"],
      publicHeadersPath: "include"),
    .target(
      name: "tinyxml2",
      path: "external/tinyxml2",
      sources: ["tinyxml2.cpp"],
      publicHeadersPath: "include"),
    .target(
      name: "C_mujoco",
      dependencies: ["ccd", "qhull", "lodepng", "tinyxml2"], // tinyobjloader is used in header-only mode, thus, don't create target, just include the header in the include path.
      path: ".",
      sources: [
        "src/engine/engine_file.c",
        "src/engine/engine_support.c",
        "src/engine/engine_util_spatial.c",
        "src/engine/engine_inverse.c",
        "src/engine/engine_util_errmem.c",
        "src/engine/engine_collision_box.c",
        "src/engine/engine_vfs.c",
        "src/engine/engine_util_blas.c",
        "src/engine/engine_solver.c",
        "src/engine/engine_sensor.c",
        "src/engine/engine_collision_primitive.c",
        "src/engine/engine_vis_visualize.c",
        "src/engine/engine_vis_init.c",
        "src/engine/engine_core_smooth.c",
        "src/engine/engine_util_sparse.c",
        "src/engine/engine_util_solve.c",
        "src/engine/engine_print.c",
        "src/engine/engine_derivative.c",
        "src/engine/engine_callback.c",
        "src/engine/engine_setconst.c",
        "src/engine/engine_ray.c",
        "src/engine/engine_collision_convex.c",
        "src/engine/engine_util_misc.c",
        "src/engine/engine_io.c",
        "src/engine/engine_vis_interact.c",
        "src/engine/engine_forward.c",
        "src/engine/engine_collision_driver.c",
        "src/engine/engine_core_constraint.c",
        "src/xml/xml_numeric_format.cc",
        "src/xml/xml_api.cc",
        "src/xml/xml.cc",
        "src/xml/xml_util.cc",
        "src/xml/xml_urdf.cc",
        "src/xml/xml_native_reader.cc",
        "src/xml/xml_native_writer.cc",
        "src/xml/xml_base.cc",
        "src/ui/ui_main.c",
        "src/render/render_util.c",
        "src/render/render_gl2.c",
        "src/render/render_context.c",
        "src/render/font/normal100.inc",
        "src/render/font/big150.inc",
        "src/render/font/big300.inc",
        "src/render/font/big100.inc",
        "src/render/font/normal150.inc",
        "src/render/font/back150.inc",
        "src/render/font/normal250.inc",
        "src/render/font/normal200.inc",
        "src/render/font/back250.inc",
        "src/render/font/normal50.inc",
        "src/render/font/big250.inc",
        "src/render/font/back100.inc",
        "src/render/font/back50.inc",
        "src/render/font/big200.inc",
        "src/render/font/big50.inc",
        "src/render/font/back300.inc",
        "src/render/font/back200.inc",
        "src/render/font/normal300.inc",
        "src/render/glad/loader.cc",
        "src/render/glad/glad.c",
        "src/render/render_gl3.c",
        "src/user/user_model.cc",
        "src/user/user_objects.cc",
        "src/user/user_mesh.cc",
        "src/user/user_util.cc",
        "src/user/user_composite.cc",
      ],
      publicHeadersPath: "include",
      cSettings: [.headerSearchPath("src"), .headerSearchPath("external/tinyobjloader/include"), .define("mjUSEPLATFORMSIMD"), .define("_GNU_SOURCE"), .define("CCD_STATIC_DEFINE"), .define("MUJOCO_DLL_EXPORTS")],
      cxxSettings: [.unsafeFlags(["-Wno-module-import-in-extern-c"])]),
  ],
  cxxLanguageStandard: .cxx14
)
